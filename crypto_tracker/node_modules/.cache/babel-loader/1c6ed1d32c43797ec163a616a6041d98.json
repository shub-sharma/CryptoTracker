{"ast":null,"code":"var _jsxFileName = \"/home/shubham/Documents/work_files/side/CryptoTracker/crypto_tracker/src/components/market_overview/DisplayAllCoins.js\";\nimport React, { Component } from 'react';\nconst CRYPTO_COMPARE_URL = 'https://www.cryptocompare.com';\nconst MAX_CHAR_LIM = 10;\nexport default class DisplayAllCoins extends Component {\n  constructor() {\n    super();\n\n    this.coinList = () => {// const coins = this.state.coinList.map(coin => {\n      //     console.log(coin);\n      //     return (            \n      //         <div className=\"col s3 center-align\" key={coin.ticker}>\n      //             <div className=\"card\">\n      //                 <div className=\"card-content\">\n      //                     <img src={coin.image} alt={coin.ticker} width=\"40\" height=\"40\"/>\n      //                     <h5>{coin.ticker}</h5>\n      //                     {/* <p>{this.getFormattedFullName(coin.fullName)}</p> */}\n      //                     <div className=\"percent-day-change\">{this.getPercentChangePerDay(coin.percentDayChange)}</div>\n      //                     <h6>{coin.price}</h6>\n      //                 </div>\n      //                 <div className=\"card-action\"><a onClick={this.handleSubmit}>Add...</a></div>\n      //             </div>\n      //         </div>\n      //     )\n      // }\n      // )\n    };\n\n    this.state = {\n      coinList: []\n    };\n  }\n\n  componentDidMount() {\n    const coinData = this.props.coinData;\n    let newCoins = [];\n\n    for (let coin in coinData) {\n      const tempCoin = coinData[coin]['USD'];\n      const newCoin = {\n        ticker: String(coin),\n        price: tempCoin['PRICE'],\n        image: CRYPTO_COMPARE_URL + tempCoin['IMAGEURL'],\n        percentDayChange: tempCoin['CHANGEPCTDAY']\n      };\n      newCoins.push(newCoin);\n    }\n\n    this.setState({\n      coinList: newCoins\n    });\n  }\n\n  getFormattedFullName(fullName) {\n    if (fullName.length > MAX_CHAR_LIM) {\n      return fullName.slice(0, 11) + \"...\";\n    } else {\n      return fullName;\n    }\n  }\n\n  getPercentChangePerDay(percent) {\n    if (percent == 0) {\n      return React.createElement(\"div\", {\n        id: \"no-change\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, percent, \"%\");\n    } else if (percent > 0) {\n      return React.createElement(\"div\", {\n        id: \"positive-change\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"+\", percent, \"%\");\n    } else {\n      return React.createElement(\"div\", {\n        id: \"negative-change\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, percent, \"%\");\n    }\n  } // handleSubmit = (e) => {\n  //     e.preventDefault();\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"market\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Market Overview\"), React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Note: All prices are in USD. Percent change indicates the change per day.\"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.coinList()));\n  }\n\n}","map":{"version":3,"sources":["/home/shubham/Documents/work_files/side/CryptoTracker/crypto_tracker/src/components/market_overview/DisplayAllCoins.js"],"names":["React","Component","CRYPTO_COMPARE_URL","MAX_CHAR_LIM","DisplayAllCoins","constructor","coinList","state","componentDidMount","coinData","props","newCoins","coin","tempCoin","newCoin","ticker","String","price","image","percentDayChange","push","setState","getFormattedFullName","fullName","length","slice","getPercentChangePerDay","percent","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAGA,MAAMC,kBAAkB,GAAG,+BAA3B;AACA,MAAMC,YAAY,GAAG,EAArB;AAEA,eAAe,MAAMC,eAAN,SAA8BH,SAA9B,CAAwC;AAEnDI,EAAAA,WAAW,GAAG;AACV;;AADU,SAqDdC,QArDc,GAqDH,MAAM,CAEb;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACH,KA7Ea;;AAEV,SAAKC,KAAL,GAAa;AACTD,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH;;AAEDE,EAAAA,iBAAiB,GAAG;AAAA,UACTC,QADS,GACG,KAAKC,KADR,CACTD,QADS;AAEhB,QAAIE,QAAQ,GAAG,EAAf;;AACA,SAAI,IAAIC,IAAR,IAAgBH,QAAhB,EAA0B;AACtB,YAAMI,QAAQ,GAAGJ,QAAQ,CAACG,IAAD,CAAR,CAAe,KAAf,CAAjB;AACA,YAAME,OAAO,GAAG;AACZC,QAAAA,MAAM,EAAEC,MAAM,CAACJ,IAAD,CADF;AAEZK,QAAAA,KAAK,EAAEJ,QAAQ,CAAC,OAAD,CAFH;AAGZK,QAAAA,KAAK,EAAEhB,kBAAkB,GAAGW,QAAQ,CAAC,UAAD,CAHxB;AAIZM,QAAAA,gBAAgB,EAAEN,QAAQ,CAAC,cAAD;AAJd,OAAhB;AAMAF,MAAAA,QAAQ,CAACS,IAAT,CAAcN,OAAd;AACH;;AACD,SAAKO,QAAL,CAAc;AACVf,MAAAA,QAAQ,EAAEK;AADA,KAAd;AAIH;;AAEDW,EAAAA,oBAAoB,CAACC,QAAD,EAAW;AAC3B,QAAIA,QAAQ,CAACC,MAAT,GAAkBrB,YAAtB,EAAoC;AAChC,aAAOoB,QAAQ,CAACE,KAAT,CAAe,CAAf,EAAkB,EAAlB,IAAwB,KAA/B;AACH,KAFD,MAEO;AACH,aAAOF,QAAP;AACH;AACJ;;AAEDG,EAAAA,sBAAsB,CAACC,OAAD,EAAU;AAC5B,QAAIA,OAAO,IAAI,CAAf,EAAiB;AACb,aACI;AAAK,QAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqBA,OAArB,MADJ;AAGH,KAJD,MAIO,IAAIA,OAAO,GAAG,CAAd,EAAiB;AACpB,aACI;AAAK,QAAA,EAAE,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA4BA,OAA5B,MADJ;AAGH,KAJM,MAIA;AACH,aACI;AAAK,QAAA,EAAE,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BA,OAA3B,MADJ;AAGH;AACJ,GAlDkD,CAoDnD;AACA;AACA;;;AA6BAC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mFAFJ,EAGI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKtB,QAAL,EADL,CAHJ,CADJ;AASH;;AA7FkD","sourcesContent":["import React, { Component } from 'react'\n\n\nconst CRYPTO_COMPARE_URL = 'https://www.cryptocompare.com';\nconst MAX_CHAR_LIM = 10;\n\nexport default class DisplayAllCoins extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            coinList: [],\n        }\n    }\n\n    componentDidMount() {\n        const {coinData} = this.props;\n        let newCoins = []\n        for(let coin in coinData) {\n            const tempCoin = coinData[coin]['USD']\n            const newCoin = {\n                ticker: String(coin),\n                price: tempCoin['PRICE'],\n                image: CRYPTO_COMPARE_URL + tempCoin['IMAGEURL'],\n                percentDayChange: tempCoin['CHANGEPCTDAY'],\n            }\n            newCoins.push(newCoin);\n        }\n        this.setState({\n            coinList: newCoins\n        })\n\n    }\n\n    getFormattedFullName(fullName) {\n        if (fullName.length > MAX_CHAR_LIM) {\n            return fullName.slice(0, 11) + \"...\";\n        } else {\n            return fullName;\n        }\n    }\n\n    getPercentChangePerDay(percent) {\n        if (percent == 0){\n            return (\n                <div id=\"no-change\">{percent}%</div>\n            )\n        } else if (percent > 0) {\n            return (\n                <div id=\"positive-change\">+{percent}%</div>\n            )\n        } else {\n            return (\n                <div id=\"negative-change\">{percent}%</div>\n            )\n        }\n    }\n    \n    // handleSubmit = (e) => {\n    //     e.preventDefault();\n    // }\n    coinList = () => {\n\n        // const coins = this.state.coinList.map(coin => {\n        //     console.log(coin);\n        //     return (            \n        //         <div className=\"col s3 center-align\" key={coin.ticker}>\n        //             <div className=\"card\">\n        //                 <div className=\"card-content\">\n        //                     <img src={coin.image} alt={coin.ticker} width=\"40\" height=\"40\"/>\n\n        //                     <h5>{coin.ticker}</h5>\n        //                     {/* <p>{this.getFormattedFullName(coin.fullName)}</p> */}\n        //                     <div className=\"percent-day-change\">{this.getPercentChangePerDay(coin.percentDayChange)}</div>\n        //                     <h6>{coin.price}</h6>\n        //                 </div>\n        //                 <div className=\"card-action\"><a onClick={this.handleSubmit}>Add...</a></div>\n\n        //             </div>\n        //         </div>\n\n        //     )\n        // }\n\n        // )\n    }\n\n\n\n    render() {\n        return (        \n            <div className=\"market\">\n                <h4 className=\"center\">Market Overview</h4>\n                <i>Note: All prices are in USD. Percent change indicates the change per day.</i>\n                <div className=\"row\">\n                    {this.coinList()}\n                </div>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}