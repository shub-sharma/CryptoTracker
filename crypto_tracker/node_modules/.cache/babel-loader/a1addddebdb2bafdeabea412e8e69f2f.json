{"ast":null,"code":"var _jsxFileName = \"/home/shubham/Documents/work_files/side/CryptoTracker/crypto_tracker/src/components/market_overview/DisplayCoins.js\";\nimport React from 'react';\n\nconst DisplayCoins = ({\n  coinData\n}) => {\n  const cryptoCompareURL = 'https://www.cryptocompare.com';\n  const MAX_CHAR_LIM = 15;\n  const coins = coinData.map(coin => {\n    const imageURL = cryptoCompareURL + coin.CoinInfo.ImageUrl;\n    return {\n      ticker: coin.CoinInfo.Name,\n      fullName: coin.CoinInfo.FullName,\n      price: coin.DISPLAY.USD.PRICE,\n      image: imageURL,\n      percentHourChange: coin.DISPLAY.CHANGPCTHOUR\n    };\n  });\n  console.log(coins); // const coinList = coins.map(coin => {\n  //     return (\n  //         <div className=\"coins\" key={coin.name}>\n  //             <div id=\"crypto-collection\" className=\"collection\">\n  //                 <div className=\"crypto-collection-item\">\n  //                     <span className=\"left\">{coin.fullName} ({coin.name})</span>\n  //                     <span className=\"right\">{coin.price}</span>\n  //                 </div>\n  //             </div>\n  //         </div>\n  //     )\n  // })\n\n  const getFormattedFullName = fullName => {\n    if (fullName.length > 15) {\n      return fullName.slice(0, 11) + \"...\";\n    } else {\n      return fullName;\n    }\n  };\n\n  const getPercentChangePerHour = percent => {\n    if (percent == 0) {\n      return React.createElement(\"div\", {\n        id: \"no-change\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Change % (hr)\", percent);\n    } else if (percent > 0) {\n      return React.createElement(\"div\", {\n        id: \"positive-change\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Change % (hr)\", percent);\n    }\n  };\n\n  const coinList = coins.map(coin => {\n    return React.createElement(\"div\", {\n      className: \"container services\",\n      key: coin.ticker,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col s3 center-align\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: coin.image,\n      alt: coin.ticker,\n      width: \"40\",\n      height: \"40\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, coin.ticker), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, getFormattedFullName(coin.fullName)), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, coin.price)), React.createElement(\"div\", {\n      className: \"card-action\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Add...\")))));\n  });\n  console.log(coins);\n  return React.createElement(\"div\", {\n    className: \"market\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, coinList));\n};\n\nexport default DisplayCoins;","map":{"version":3,"sources":["/home/shubham/Documents/work_files/side/CryptoTracker/crypto_tracker/src/components/market_overview/DisplayCoins.js"],"names":["React","DisplayCoins","coinData","cryptoCompareURL","MAX_CHAR_LIM","coins","map","coin","imageURL","CoinInfo","ImageUrl","ticker","Name","fullName","FullName","price","DISPLAY","USD","PRICE","image","percentHourChange","CHANGPCTHOUR","console","log","getFormattedFullName","length","slice","getPercentChangePerHour","percent","coinList"],"mappings":"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","sourcesContent":["import React from 'react'\n\n\nconst DisplayCoins = ({coinData}) => {\n    const cryptoCompareURL = 'https://www.cryptocompare.com';\n    const MAX_CHAR_LIM = 15;\n    const coins = coinData.map((coin) => {\n        const imageURL = cryptoCompareURL + coin.CoinInfo.ImageUrl;\n        return {\n            ticker: coin.CoinInfo.Name,\n            fullName: coin.CoinInfo.FullName,\n            price: coin.DISPLAY.USD.PRICE,\n            image: imageURL,\n            percentHourChange: coin.DISPLAY.CHANGPCTHOUR,\n        }\n    })\n    console.log(coins);\n    // const coinList = coins.map(coin => {\n    //     return (\n    //         <div className=\"coins\" key={coin.name}>\n    //             <div id=\"crypto-collection\" className=\"collection\">\n    //                 <div className=\"crypto-collection-item\">\n    //                     <span className=\"left\">{coin.fullName} ({coin.name})</span>\n    //                     <span className=\"right\">{coin.price}</span>\n    //                 </div>\n\n    //             </div>\n    //         </div>\n    //     )\n    // })\n    const getFormattedFullName = (fullName) =>{\n        if (fullName.length > 15) {\n            return fullName.slice(0, 11) + \"...\";\n        } else {\n            return fullName;\n        }\n    }\n\n    const getPercentChangePerHour = (percent) => {\n        if (percent == 0){\n            return (\n                <div id=\"no-change\">Change % (hr){percent}</div>\n            )\n        } else if (percent > 0) {\n            return (\n                <div id=\"positive-change\">Change % (hr){percent}</div>\n            )\n        }\n    }\n\n    const coinList = coins.map(coin => {\n        return (\n            <div className=\"container services\" key={coin.ticker}>\n                \n                    <div className=\"col s3 center-align\" >\n                        <div className=\"card\">\n                            <div className=\"card-content\">\n                                <img src={coin.image} alt={coin.ticker} width=\"40\" height=\"40\"/>\n\n                                <h5>{coin.ticker}</h5>\n                                <p>{getFormattedFullName(coin.fullName)}</p>\n                                <h6>{coin.price}</h6>\n                            </div>\n                            <div className=\"card-action\"><a href=\"#\">Add...</a></div>\n\n                        </div>\n                    </div>\n            </div>\n\n\n\n\n\n\n\n\n        )\n\n\n\n\n    })\n\n\n\n\n\n\n\n\n\n\n    console.log(coins);\n\n\n    return (\n        <div className=\"market\">\n            <div className=\"row\">\n                {coinList}\n            </div>\n        </div>\n    )\n}\n\n\nexport default DisplayCoins;"]},"metadata":{},"sourceType":"module"}