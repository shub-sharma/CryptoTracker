{"ast":null,"code":"var _jsxFileName = \"/home/shubham/Documents/work_files/side/CryptoTracker/crypto_tracker/src/components/market_overview/DisplayAllCoins.js\";\nimport React, { Component } from 'react';\nconst CRYPTO_COMPARE_URL = 'https://www.cryptocompare.com';\nconst MAX_CHAR_LIM = 10;\nexport default class DisplayAllCoins extends Component {\n  constructor() {\n    super();\n\n    this.coinList = () => {\n      const coinData = this.props.coinData;\n      let newCoins = [];\n\n      for (let coin in coinData) {\n        const tempCoin = coinData[coin]['USD'];\n        const newCoin = {\n          ticker: String(coin),\n          price: tempCoin['PRICE'],\n          image: CRYPTO_COMPARE_URL + tempCoin['IMAGEURL'],\n          percentDayChange: tempCoin['CHANGEPCTDAY']\n        };\n        newCoins.push(newCoin);\n      }\n\n      this.setState({\n        coinList: newCoins\n      });\n      const coins = this.state.coinList.map(coin => {\n        return React.createElement(\"div\", {\n          className: \"col s3 center-align\",\n          key: coin.ticker,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: coin.image,\n          alt: coin.ticker,\n          width: \"80\",\n          height: \"80\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, coin.ticker), React.createElement(\"div\", {\n          className: \"percent-day-change\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, this.getPercentChangePerDay(coin.percentDayChange)), React.createElement(\"h6\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, coin.price)), React.createElement(\"div\", {\n          className: \"card-action\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          onClick: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \"Add...\"))));\n      });\n      return coins;\n    };\n\n    this.state = {\n      coinList: []\n    };\n  }\n\n  getCoinList() {}\n\n  componentDidMount() {}\n\n  getFormattedFullName(fullName) {\n    if (fullName.length > MAX_CHAR_LIM) {\n      return fullName.slice(0, 11) + \"...\";\n    } else {\n      return fullName;\n    }\n  }\n\n  getPercentChangePerDay(percent) {\n    if (percent == 0) {\n      return React.createElement(\"div\", {\n        id: \"no-change\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, percent, \"%\");\n    } else if (percent > 0) {\n      return React.createElement(\"div\", {\n        id: \"positive-change\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"+\", percent, \"%\");\n    } else {\n      return React.createElement(\"div\", {\n        id: \"negative-change\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, percent, \"%\");\n    }\n  } // handleSubmit = (e) => {\n  //     e.preventDefault();\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"market\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Market Overview\"), React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Note: All prices are in USD. Percent change indicates the change per day.\"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.coinList()));\n  }\n\n}","map":{"version":3,"sources":["/home/shubham/Documents/work_files/side/CryptoTracker/crypto_tracker/src/components/market_overview/DisplayAllCoins.js"],"names":["React","Component","CRYPTO_COMPARE_URL","MAX_CHAR_LIM","DisplayAllCoins","constructor","coinList","coinData","props","newCoins","coin","tempCoin","newCoin","ticker","String","price","image","percentDayChange","push","setState","coins","state","map","getPercentChangePerDay","handleSubmit","getCoinList","componentDidMount","getFormattedFullName","fullName","length","slice","percent","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\n\nconst CRYPTO_COMPARE_URL = 'https://www.cryptocompare.com';\nconst MAX_CHAR_LIM = 10;\n\nexport default class DisplayAllCoins extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            coinList: [],\n        }\n    }\n    getCoinList() {\n\n    }\n\n    componentDidMount() {\n        \n\n    }\n\n    getFormattedFullName(fullName) {\n        if (fullName.length > MAX_CHAR_LIM) {\n            return fullName.slice(0, 11) + \"...\";\n        } else {\n            return fullName;\n        }\n    }\n\n    getPercentChangePerDay(percent) {\n        if (percent == 0){\n            return (\n                <div id=\"no-change\">{percent}%</div>\n            )\n        } else if (percent > 0) {\n            return (\n                <div id=\"positive-change\">+{percent}%</div>\n            )\n        } else {\n            return (\n                <div id=\"negative-change\">{percent}%</div>\n            )\n        }\n    }\n    \n    // handleSubmit = (e) => {\n    //     e.preventDefault();\n    // }\n    coinList = () => {\n        const {coinData} = this.props;\n        let newCoins = []\n        for(let coin in coinData) {\n            const tempCoin = coinData[coin]['USD']\n            const newCoin = {\n                ticker: String(coin),\n                price: tempCoin['PRICE'],\n                image: CRYPTO_COMPARE_URL + tempCoin['IMAGEURL'],\n                percentDayChange: tempCoin['CHANGEPCTDAY'],\n            }\n            newCoins.push(newCoin);\n        }\n        this.setState({\n            coinList: newCoins\n        })\n        \n        const coins = this.state.coinList.map(coin => {\n            return (            \n                <div className=\"col s3 center-align\" key={coin.ticker}>\n                    <div className=\"card\">\n                        <div className=\"card-content\">\n                            <img src={coin.image} alt={coin.ticker} width=\"80\" height=\"80\"/>\n\n                            <h5>{coin.ticker}</h5>\n                            {/* <p>{this.getFormattedFullName(coin.fullName)}</p> */}\n                            <div className=\"percent-day-change\">{this.getPercentChangePerDay(coin.percentDayChange)}</div>\n                            <h6>{coin.price}</h6>\n                        </div>\n                        <div className=\"card-action\"><a onClick={this.handleSubmit}>Add...</a></div>\n\n                    </div>\n                </div>\n\n            )\n        }\n\n        )\n        return coins;\n    }\n\n\n\n    render() {\n        return (        \n            <div className=\"market\">\n                <h4 className=\"center\">Market Overview</h4>\n                <i>Note: All prices are in USD. Percent change indicates the change per day.</i>\n                <div className=\"row\">\n                    {this.coinList()}\n                </div>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}