{"ast":null,"code":"import React, { Component } from 'react';\nimport DisplayCoins from './DisplayCoins';\nimport LoadingScreen from './LoadingScreen';\nexport default class Market extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      coinList: null\n    };\n  }\n\n  componentDidMount() {\n    const url = 'https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD';\n    const apiKey = 'aff46362b8aef9ef13b86e6eb6c5e55bd01e664ed9cef2b0dffd71d37ae9add0';\n    this.getApiData(url, apiKey); // const cc = require('cryptocompare');\n    // cc.setApiKey('API KEY GOES HERE')\n    // cc.coinList().then(coinList => {\n    //     console.log(coinList);\n    // })\n    // // setInterval(this.fetchResults, 5000);\n  }\n\n  getApiData(url, apiKey) {\n    const fullUrl = url + '&api_key=' + apiKey;\n    fetch(fullUrl).then(res => res.json()).then(json => {\n      this.setState({\n        isLoaded: true,\n        coinList: json.Data\n      });\n    });\n    console.log(\"hello\");\n    console.log(this.state.coinList);\n  }\n\n  render() {\n    if (this.state.isLoaded) {}\n  } // render() {\n  //     return (\n  //         <div>\n  //             <div>\n  //                 {!this.state.coinList ? (\n  //                 <LoadingScreen />\n  //                  ) : ( \n  //                 <DisplayCoins coinData={this.state.coinList}/>\n  //                  )}\n  //             </div>\n  //         </div>\n  //     )\n  // }\n\n\n}","map":{"version":3,"sources":["/home/shubham/Documents/work_files/side/CryptoTracker/crypto_tracker/src/components/market_overview/Market.js"],"names":["React","Component","DisplayCoins","LoadingScreen","Market","constructor","props","state","isLoaded","coinList","componentDidMount","url","apiKey","getApiData","fullUrl","fetch","then","res","json","setState","Data","console","log","render"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,eAAe,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAE1CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,KADD;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAIH;;AAMDC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,GAAG,GAAG,yEAAZ;AACA,UAAMC,MAAM,GAAG,kEAAf;AACA,SAAKC,UAAL,CAAgBF,GAAhB,EAAqBC,MAArB,EAHgB,CAKhB;AACA;AACA;AACA;AACA;AACA;AAEH;;AAEDC,EAAAA,UAAU,CAACF,GAAD,EAAMC,MAAN,EAAc;AACpB,UAAME,OAAO,GAAGH,GAAG,GAAG,WAAN,GAAoBC,MAApC;AACAG,IAAAA,KAAK,CAACD,OAAD,CAAL,CACCE,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEME,IAAI,IAAI;AACV,WAAKC,QAAL,CAAc;AACVX,QAAAA,QAAQ,EAAE,IADA;AAEVC,QAAAA,QAAQ,EAAES,IAAI,CAACE;AAFL,OAAd;AAIH,KAPD;AAQAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWE,QAAvB;AACH;;AAIDc,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKhB,KAAL,CAAWC,QAAf,EAAyB,CAExB;AACJ,GAhDyC,CAkD1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA9D0C","sourcesContent":["import React, { Component } from 'react'\nimport DisplayCoins from './DisplayCoins'\nimport LoadingScreen from './LoadingScreen'\n\nexport default class Market extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoaded: false,\n            coinList: null,\n        }\n    }\n\n\n\n\n\n    componentDidMount() {\n        const url = 'https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD';\n        const apiKey = 'aff46362b8aef9ef13b86e6eb6c5e55bd01e664ed9cef2b0dffd71d37ae9add0';\n        this.getApiData(url, apiKey);\n\n        // const cc = require('cryptocompare');\n        // cc.setApiKey('API KEY GOES HERE')\n        // cc.coinList().then(coinList => {\n        //     console.log(coinList);\n        // })\n        // // setInterval(this.fetchResults, 5000);\n\n    }\n\n    getApiData(url, apiKey) {\n        const fullUrl = url + '&api_key=' + apiKey;\n        fetch(fullUrl)\n        .then(res => res.json())\n        .then(json => {\n            this.setState({\n                isLoaded: true,\n                coinList: json.Data,\n            })\n        })\n        console.log(\"hello\");\n        console.log(this.state.coinList);\n    }\n\n\n\n    render() {\n        if (this.state.isLoaded) {\n            \n        }\n    }\n\n    // render() {\n    //     return (\n    //         <div>\n    //             <div>\n    //                 {!this.state.coinList ? (\n    //                 <LoadingScreen />\n    //                  ) : ( \n    //                 <DisplayCoins coinData={this.state.coinList}/>\n    //                  )}\n    //             </div>\n    //         </div>\n    //     )\n    // }\n}\n"]},"metadata":{},"sourceType":"module"}