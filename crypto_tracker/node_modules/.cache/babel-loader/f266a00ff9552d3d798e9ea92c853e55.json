{"ast":null,"code":"import _defineProperty from \"/home/shubham/Documents/work_files/side/CryptoTracker/crypto_tracker/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/shubham/Documents/work_files/side/CryptoTracker/crypto_tracker/src/components/market_overview/DisplayAllCoins.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nconst CRYPTO_COMPARE_URL = 'https://www.cryptocompare.com';\nconst MAX_CHAR_LIM = 10;\nexport default class DisplayAllCoins extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n    };\n\n    this.state = {\n      coinList: null\n    };\n  }\n\n  extractCoinInfo(coinList) {}\n\n  componentDidMount() {\n    const coinData = this.props.coinData;\n    const newCoins = coinData.map(coin => {\n      const imageURL = CRYPTO_COMPARE_URL + coin.CoinInfo.ImageUrl; // console.log(imageURL);\n\n      return {\n        ticker: coin.CoinInfo.Name,\n        fullName: coin.CoinInfo.FullName,\n        price: coin.DISPLAY.USD.PRICE,\n        image: imageURL,\n        percentDayChange: coin.DISPLAY.USD.CHANGEPCTDAY\n      };\n    });\n    this.setState(_objectSpread({}, this.state.coins, {\n      coins: newCoins\n    }));\n    console.log(this.state.coins);\n  }\n\n  getFormattedFullName(fullName) {\n    if (fullName.length > MAX_CHAR_LIM) {\n      return fullName.slice(0, 11) + \"...\";\n    } else {\n      return fullName;\n    }\n  }\n\n  getPercentChangePerDay(percent) {\n    if (percent == 0) {\n      return React.createElement(\"div\", {\n        id: \"no-change\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, percent, \"%\");\n    } else if (percent > 0) {\n      return React.createElement(\"div\", {\n        id: \"positive-change\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"+\", percent, \"%\");\n    } else {\n      return React.createElement(\"div\", {\n        id: \"negative-change\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, percent, \"%\");\n    }\n  }\n\n  coinList() {\n    const coins = this.state.coins.map(coin => {\n      console.log(coin);\n      return React.createElement(\"div\", {\n        className: \"col s3 center-align\",\n        key: coin.ticker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: coin.image,\n        alt: coin.ticker,\n        width: \"40\",\n        height: \"40\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, coin.ticker), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, this.getFormattedFullName(coin.fullName)), React.createElement(\"div\", {\n        className: \"percent-day-change\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.getPercentChangePerDay(coin.percentDayChange)), React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, coin.price)), React.createElement(\"div\", {\n        className: \"card-action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Add...\"))));\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"market\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Market Overview\"), React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Note: All prices are in USD. Percent change indicates the change per day.\"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.coinList));\n  }\n\n}","map":{"version":3,"sources":["/home/shubham/Documents/work_files/side/CryptoTracker/crypto_tracker/src/components/market_overview/DisplayAllCoins.js"],"names":["React","Component","CRYPTO_COMPARE_URL","MAX_CHAR_LIM","DisplayAllCoins","constructor","handleSubmit","e","preventDefault","state","coinList","extractCoinInfo","componentDidMount","coinData","props","newCoins","map","coin","imageURL","CoinInfo","ImageUrl","ticker","Name","fullName","FullName","price","DISPLAY","USD","PRICE","image","percentDayChange","CHANGEPCTDAY","setState","coins","console","log","getFormattedFullName","length","slice","getPercentChangePerDay","percent","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\n\nconst CRYPTO_COMPARE_URL = 'https://www.cryptocompare.com';\nconst MAX_CHAR_LIM = 10;\n\nexport default class DisplayAllCoins extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            coinList: null,\n        }\n    }\n\n    extractCoinInfo(coinList) {\n        \n    }\n\n    componentDidMount() {\n        const {coinData} = this.props;\n\n        const newCoins = coinData.map((coin) => {\n            const imageURL = CRYPTO_COMPARE_URL + coin.CoinInfo.ImageUrl;\n            // console.log(imageURL);\n            return {\n                ticker: coin.CoinInfo.Name,\n                fullName: coin.CoinInfo.FullName,\n                price: coin.DISPLAY.USD.PRICE,\n                image: imageURL,\n                percentDayChange: coin.DISPLAY.USD.CHANGEPCTDAY,\n            }\n        })\n        this.setState({...this.state.coins, coins: newCoins});\n        console.log(this.state.coins);\n    }\n\n    getFormattedFullName(fullName) {\n        if (fullName.length > MAX_CHAR_LIM) {\n            return fullName.slice(0, 11) + \"...\";\n        } else {\n            return fullName;\n        }\n    }\n\n    getPercentChangePerDay(percent) {\n        if (percent == 0){\n            return (\n                <div id=\"no-change\">{percent}%</div>\n            )\n        } else if (percent > 0) {\n            return (\n                <div id=\"positive-change\">+{percent}%</div>\n            )\n        } else {\n            return (\n                <div id=\"negative-change\">{percent}%</div>\n            )\n        }\n    }\n    \n    handleSubmit = (e) => {\n        e.preventDefault();\n    }\n    coinList() {\n        const coins = this.state.coins.map(coin => {\n            console.log(coin);\n            return (            \n                <div className=\"col s3 center-align\" key={coin.ticker}>\n                    <div className=\"card\">\n                        <div className=\"card-content\">\n                            <img src={coin.image} alt={coin.ticker} width=\"40\" height=\"40\"/>\n\n                            <h5>{coin.ticker}</h5>\n                            <p>{this.getFormattedFullName(coin.fullName)}</p>\n                            <div className=\"percent-day-change\">{this.getPercentChangePerDay(coin.percentDayChange)}</div>\n                            <h6>{coin.price}</h6>\n                        </div>\n                        <div className=\"card-action\"><a onClick={this.handleSubmit}>Add...</a></div>\n\n                    </div>\n                </div>\n\n            )\n        }\n        )\n    }\n\n\n\n    render() {\n        return (        \n            <div className=\"market\">\n                <h4 className=\"center\">Market Overview</h4>\n                <i>Note: All prices are in USD. Percent change indicates the change per day.</i>\n                <div className=\"row\">\n                {this.coinList}\n                </div>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}